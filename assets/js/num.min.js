/*
 * CRnumber v1.1.1 - Split Flap
 *
 * Copyright 2016, YongJun Shin
 *
 * Webagency Newriver - http://newriver.co.kr/
 *
 */

;(function($){
	var plugin = {};

	var defaults = {
		delay : 120,
		speed : 700,
		comma : false,
		lineHeight : null,
		startNum : ''
	}

	$.fn.CRnumber = function(options){
		if(!this.length) return this;

		if(this.length > 1){
			this.each(function(){
				$(this).CRnumber(options);
			});
			return this;
		}

		var el	= plugin.el = this;
		var num	= plugin.num = {};

		var init = function(){
			num.settings = $.extend({}, defaults, options);
			num.origin = el.text();
			num.numArray = num.origin.split('');
			num.max = num.numArray.length;
			num.max2 = num.settings.comma ? Math.floor((num.max / 3)) + num.max : num.max;
			num.height = num.settings.lineHeight == null ? parseInt(el.css('line-height')) : num.settings.lineHeight;
			el.css({'display':'inline-block', 'height':num.height, 'position':'relative', 'overflow':'hidden'});

			setup();
		}

		var setup = function(){
			numWrapping();

			start();
		}

		var start = function(){
			numRotatePlay();
		}

		var numWrapping = function(){
			var t = '', n, 
				is = 0, js;

			el.empty();

			for(var i = (num.max-1) ; i >= 0 ; i--){
				js = 0;
				t = '<span class="number">';
				for(var j = num.numArray[i]-10 ; j < num.numArray[i] ; j++){
					js++;
					n = j < 0 ? j + 10 : j;
					if(js == 10) n = num.settings.startNum;
					t += '<span style="display:block; height:'+num.height+'px; line-height:'+num.height+'px;">'+n+'</span>';
				}
				t += '</span>';
				if(is > 0 && (is % 3) == 0 && num.settings.comma) t += '<span class="comma">,</span>';
				is++;
				el.prepend(t);
			}
			num.num = el.children().css({'display':'block', 'float':'left'});
			el.children('.number').css({'position':'relative', 'top' : -(num.height * 9)});
			el.children('.comma').css({'position':'relative', 'top' : num.settings.startNum === '' ? -(num.height) : 0});
		}

		var numRotatePlay = function(){
			var d = 0;
			for(var i = (num.max2-1) ; i >= 0 ; i--){
				num.num.eq(i).delay(num.settings.delay * d).animate({'top':0}, num.settings.speed);
				d++;
			}
		}

		el.numOrigin = function(){
			el.html(num.origin);
		}

		init();

		return this;
	};
})(jQuery);